<UserControl x:Class="WpfApplication1.Bed"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:wpfApplication1="clr-namespace:WpfApplication1"
             xmlns:dragDropListBox="clr-namespace:DragDropListBox"
             mc:Ignorable="d" 
             d:DesignHeight="1024" d:DesignWidth="1230" Loaded="Bed_OnLoaded">
    <UserControl.Resources>
        <!--<wpfApplication1:BackgroundConverter x:Key="BgConverter" />-->
        <DataTemplate x:Key="Id">
            <TextBlock Text="{Binding Id}" />
        </DataTemplate>
        <DataTemplate x:Key="Name">
            <TextBlock Text="{Binding Name}" />
        </DataTemplate>
        <DataTemplate x:Key="PatientId">
            <TextBlock Text="{Binding PatientId}" />
        </DataTemplate>
        <DataTemplate x:Key="planetTemplateDrag">
            <DataTemplate.Resources>
                <Style TargetType="Image">
                    <Setter Property="Width" Value="50" />
                    <Setter Property="Height" Value="50" />
                    <Setter Property="Margin" Value="5" />
                </Style>
            </DataTemplate.Resources>
            <StackPanel>
                <!--<Image Source="{Binding Path=Location}" />-->
                <!--<TextBlock Text="{Binding Path=PatientId}" TextAlignment="Center" FontWeight="Bold" />-->
                <TextBlock Text="{Binding Path=Name}" TextAlignment="Center" FontWeight="Bold" />
            </StackPanel>
        </DataTemplate>
        <Style x:Key="ListBoxItemStyle2" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Border.ToolTip>
                                <ToolTip Content="{Binding ToolTips}"></ToolTip>
                            </Border.ToolTip>
                            <Grid Background="{Binding ItemBgBrush}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="{Binding PatientId}" HorizontalAlignment="Stretch" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="13.333" Foreground="Black"/>
                                <Label Content="{Binding Name}" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" VerticalContentAlignment="Center" Foreground="Black" FontSize="13.333"/>
                                <Label Content="{Binding InfectionType}" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" VerticalContentAlignment="Center" Foreground="Black" FontSize="13.333"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Height" Value="155"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="20,20"/>
            <Setter Property="AllowDrop" Value="True"/>
            <EventSetter Event="PreviewDragEnter" Handler="PreviewDragEnter_Event"/>
            <EventSetter Event="PreviewDrop" Handler="PreviewDrop_Event"/>
            <EventSetter Event="PreviewDragOver" Handler="PreviewDragOver_Event"/>
            <EventSetter Event="PreviewDragLeave" Handler="PreviewDragLeave_Event"/>
            <EventSetter Event="MouseDoubleClick" Handler="MouseDoubleClick_Event"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="3*"/>
                                </Grid.RowDefinitions>
                                <Rectangle Fill="{Binding BedBrush}" HorizontalAlignment="Stretch" Height="Auto" RadiusY="16.226" RadiusX="16.226" Grid.RowSpan="2" Stroke="Black" VerticalAlignment="Stretch"/>
                                <Rectangle Fill="{Binding TitleBrush}" HorizontalAlignment="Stretch" Height="Auto" RadiusY="0" RadiusX="0" Stroke="Black" VerticalAlignment="Stretch" Width="Auto"/>
                                <Label Content="{Binding BedName}" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                                <Label Content="{Binding PatientName}" HorizontalAlignment="Center" Grid.Row="1" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="grid" Height="Auto" Width="Auto" Background="#00000000">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                                <EasingColorKeyFrame KeyTime="0" Value="#7F82E1E4"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="Auto" VerticalAlignment="Stretch"/>
                            <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Tag}"  VerticalAlignment="Center" FontSize="16" TextAlignment="Center" Foreground="#FF939393"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ToggleButtonControlTemplate1" TargetType="{x:Type ToggleButton}">
        	<Grid Margin="3,5">
        		<VisualStateManager.VisualStateGroups>
        			<VisualStateGroup x:Name="CheckStates">
        				<VisualState x:Name="Checked">
        					<Storyboard>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="Red"/>
        						</ColorAnimationUsingKeyFrames>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label1">
        							<EasingColorKeyFrame KeyTime="0" Value="Red"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Unchecked">
        					<Storyboard>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF9B9696"/>
        						</ColorAnimationUsingKeyFrames>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label1">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF9B9696"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Indeterminate"/>
        			</VisualStateGroup>
        		</VisualStateManager.VisualStateGroups>
        		<Rectangle x:Name="rectangle" Fill="#FFCFCFCF" HorizontalAlignment="Stretch" Height="Auto" RadiusY="5" RadiusX="5" Stroke="#FF9B9696" StrokeThickness="5" VerticalAlignment="Stretch" Width="Auto"/>
        		<Grid Height="Auto" VerticalAlignment="Stretch" Width="Auto">
        			<Grid.RowDefinitions>
        				<RowDefinition Height="3*"/>
        				<RowDefinition Height="2*"/>
        			</Grid.RowDefinitions>
        			<Label x:Name="label" Content="{TemplateBinding Tag}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="White" FontSize="16" FontWeight="Bold"/>
        			<Label x:Name="label1" Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="#FF607C50"/>
        		</Grid>
        	</Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ToggleButtonControlTemplate2" TargetType="{x:Type ToggleButton}">
        	<Grid Margin="3,5">
        		<VisualStateManager.VisualStateGroups>
        			<VisualStateGroup x:Name="CheckStates">
        				<VisualState x:Name="Checked">
        					<Storyboard>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="Red"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Unchecked"/>
        				<VisualState x:Name="Indeterminate"/>
        			</VisualStateGroup>
        		</VisualStateManager.VisualStateGroups>
        		<Rectangle Fill="#FFCFCFCF" Height="Auto" RadiusY="5" RadiusX="5" Stroke="#FF9B9696" StrokeThickness="5" VerticalAlignment="Stretch" Width="Auto"/>
        		<Label x:Name="label" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" FontWeight="Bold" Foreground="#FF9B9696"/>
        	</Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ToggleButtonControlTemplate3" TargetType="{x:Type ToggleButton}">
        	<Grid Margin="3,3,3,0">
        		<VisualStateManager.VisualStateGroups>
        			<VisualStateGroup x:Name="CheckStates">
        				<VisualState x:Name="Checked">
        					<Storyboard>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        							<EasingColorKeyFrame KeyTime="0" Value="Red"/>
        						</ColorAnimationUsingKeyFrames>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        							<EasingColorKeyFrame KeyTime="0" Value="Red"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Unchecked"/>
        				<VisualState x:Name="Indeterminate"/>
        			</VisualStateGroup>
        		</VisualStateManager.VisualStateGroups>
        		<Rectangle x:Name="rectangle" Fill="#FFCFCFCF" HorizontalAlignment="Stretch" Height="Auto" RadiusY="5" RadiusX="5" Stroke="#FF9B9696" StrokeThickness="5" VerticalAlignment="Stretch"/>
        		<Label x:Name="label" Content="{TemplateBinding Content}" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="13.333" Foreground="#FF9B9696"/>
        	</Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ListBoxItemControlTemplate1" TargetType="{x:Type ListBoxItem}">
        	<Grid>
        		<Grid Height="Auto" VerticalAlignment="Stretch" Width="Auto" ToolTip="{Binding ToolTips}">
        			<Grid.ColumnDefinitions>
        				<ColumnDefinition Width="2*"/>
        				<ColumnDefinition/>
        			</Grid.ColumnDefinitions>
        			<Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Margin="2">
        				<Rectangle Fill="{Binding ItemBgBrush}" HorizontalAlignment="Stretch" Height="Auto" Stroke="{x:Null}" VerticalAlignment="Stretch" RadiusX="10" RadiusY="10"/>
        				<Label Content="{Binding PatientName}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Foreground="White"/>
        			</Grid>
        			<Grid Grid.Column="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="2">
        				<Rectangle Fill="{Binding ItemBgBrush}" Height="Auto" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="Auto" RadiusX="10" RadiusY="10"/>
        				<Label Content="{Binding InfectionType}" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Foreground="White"/>
        			</Grid>
        		</Grid>
        	</Grid>
        </ControlTemplate>
        <Style x:Key="PatientListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="Padding" Value="2,0,0,0"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ListBoxItem}">
        				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Margin="0,3">
        					<Grid Height="Auto" VerticalAlignment="Stretch" Width="Auto" ToolTip="{Binding ToolTips}">
        						<Grid.ColumnDefinitions>
        							<ColumnDefinition Width="2*"/>
        							<ColumnDefinition/>
        						</Grid.ColumnDefinitions>
        						<Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Margin="2">
        							<Rectangle Fill="{Binding ItemBgBrush}" HorizontalAlignment="Stretch" Height="Auto" Stroke="{x:Null}" VerticalAlignment="Stretch" RadiusX="10" RadiusY="10"/>
        							<Label Content="{Binding Name}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Foreground="White"/>
        						</Grid>
        						<Grid Grid.Column="1" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="2">
        							<Rectangle Fill="{Binding ItemBgBrush}" Height="Auto" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="Auto" RadiusX="10" RadiusY="10"/>
        							<Label Content="{Binding InfectionType}" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Foreground="White"/>
        						</Grid>
        					</Grid>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsSelected" Value="true">
        						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
        					</Trigger>
        					<MultiTrigger>
        						<MultiTrigger.Conditions>
        							<Condition Property="IsSelected" Value="true"/>
        							<Condition Property="Selector.IsSelectionActive" Value="false"/>
        						</MultiTrigger.Conditions>
        						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
        					</MultiTrigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="MinHeight" Value="20"/>
        	<Setter Property="Height" Value="Auto"/>
        </Style>
        <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
        	<Grid>
        		<Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="2">
        			<Rectangle Fill="#FF48CF6D" HorizontalAlignment="Stretch" Height="Auto" Stroke="{x:Null}" VerticalAlignment="Stretch" RadiusX="10" RadiusY="10"/>
        			<Label Content="{TemplateBinding Content}" VerticalAlignment="Stretch" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16"/>
        		</Grid>
        	</Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonControlTemplate2" TargetType="{x:Type Button}">
        	<Grid Margin="2">
        		<Grid>
        			<VisualStateManager.VisualStateGroups>
        				<VisualStateGroup x:Name="CheckStates">
        					<VisualState x:Name="Checked">
        						<Storyboard>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label">
        								<EasingColorKeyFrame KeyTime="0" Value="Red"/>
        							</ColorAnimationUsingKeyFrames>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        								<EasingColorKeyFrame KeyTime="0" Value="Red"/>
        							</ColorAnimationUsingKeyFrames>
        						</Storyboard>
        					</VisualState>
        					<VisualState x:Name="Unchecked"/>
        					<VisualState x:Name="Indeterminate"/>
        				</VisualStateGroup>
        			</VisualStateManager.VisualStateGroups>
        			<Rectangle x:Name="rectangle" Fill="#FFCFCFCF" HorizontalAlignment="Stretch" Height="Auto" RadiusY="5" RadiusX="5" Stroke="#FF9B9696" StrokeThickness="5" VerticalAlignment="Stretch"/>
        			<Label x:Name="label" Content="{TemplateBinding Content}" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="13.333" Foreground="#FF9B9696"/>
        		</Grid>
        	</Grid>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid Style="{StaticResource GridBackGround1}">
    	<Viewbox Stretch="Fill" Margin="692.5,1037.5,250.5,-239.5">
    		<StackPanel Height="1024" Width="1230" >
    			<Grid Height="100" x:Name="TopGrid" Margin="0,0,0,0"  Style="{StaticResource GridBackGround1}">




    				<TextBlock HorizontalAlignment="Left" Margin="219.928,20,0,0" x:Name="PatientIDtextBlock" Text="{DynamicResource PatientIDtext}" VerticalAlignment="Top" Style="{StaticResource DialogTextBlock}" FontWeight="Bold" />
    				<TextBox HorizontalAlignment="Left" Margin="320.062,20,0,0" x:Name="PatientIDTextBox" Width="89" Style="{StaticResource DialogTextBox}" TabIndex="10001" IsTabStop="True" DataContext="{Binding}" Height="27" VerticalAlignment="Top" />
    				<TextBlock HorizontalAlignment="Left" Margin="219.928,60,0,0" x:Name="textBlock8" Text="{DynamicResource Nametext}" VerticalAlignment="Top" Style="{StaticResource DialogTextBlock}" FontWeight="Bold" />
    				<TextBox HorizontalAlignment="Left" Margin="320.062,60,0,0" x:Name="NameTextBox" VerticalAlignment="Top" Width="89" Style="{StaticResource DialogTextBox}" TabIndex="10002" IsTabStop="True" />
                <!--<TextBlock Margin="220,20,0,0" x:Name="textBlock1" Text="{DynamicResource DateText}" VerticalAlignment="Top" HorizontalAlignment="Left" Style="{StaticResource DialogTextBlock}" FontWeight="Bold" />-->

    				<TextBlock HorizontalAlignment="Left" Margin="479.928,20,0,0" x:Name="InfectTypetextBlock" Text="感染类型" VerticalAlignment="Top" Style="{StaticResource DialogTextBlock}" FontWeight="Bold" />
    				<ComboBox HorizontalAlignment="Left" Margin="550.062,20,0,0" x:Name="InfectTypeComboBox" Width="150" VerticalAlignment="Top" Text="" Padding="3,1" FontSize="16" VerticalContentAlignment="Center" Height="27" TabIndex="20009" IsTabStop="True" />

    				<CheckBox Visibility="Hidden" x:Name="IsFixedBedCheckBox" HorizontalAlignment="Left" Content="是否固定床位" Margin="480.062,60,0,0"  Width="150" VerticalAlignment="Top"  Padding="3,1" FontSize="16" VerticalContentAlignment="Center" Height="27" TabIndex="20009" IsTabStop="True" />

    				<TextBlock HorizontalAlignment="Left" Margin="479.928,60,0,0" x:Name="GendertextBlock" Text="性别" VerticalAlignment="Top" Style="{StaticResource DialogTextBlock}" FontWeight="Bold" />
    				<ComboBox x:Name="SexComboBox" Margin="550.062,60,0,0" HorizontalAlignment="Left" Width="150" VerticalAlignment="Top" Text="男" Padding="3,1" FontSize="16" VerticalContentAlignment="Center" Height="27" TabIndex="20007" IsTabStop="True" ItemsSource="{Binding}" />

    				<TextBlock HorizontalAlignment="Right" Margin="0,20,400,0" x:Name="textBlock2" Text="{DynamicResource BeginText}" VerticalAlignment="Top" Style="{StaticResource DialogTextBlock}" />
    				<DatePicker HorizontalAlignment="Right" Margin="0,20,240,0" x:Name="BeginDatePicker" VerticalAlignment="Top" Width="130" SelectedDateFormat="Short" MouseLeftButtonDown="BeginDatePicker_MouseLeftButtonDown" CalendarOpened="EndatePicker_CalendarOpened" SelectedDateChanged="EndatePicker_SelectedDateChanged" Height="27" FontSize="16" Padding="3,0" VerticalContentAlignment="Center" TabIndex="10003" Style="{StaticResource DatePickerStyle}" RenderTransformOrigin="2.033,0.475" />
    				<TextBlock HorizontalAlignment="Right" Margin="0,20,160,0" x:Name="textBlock3" Text="{DynamicResource EndText}" VerticalAlignment="Top" Width="45" Style="{StaticResource DialogTextBlock}" />
    				<DatePicker HorizontalAlignment="Right" Style="{StaticResource DatePickerStyle}" Margin="0,20,20,0" x:Name="EndatePicker" VerticalAlignment="Top" Width="130" MouseLeftButtonDown="BeginDatePicker_MouseLeftButtonDown" CalendarOpened="EndatePicker_CalendarOpened" SelectedDateChanged="EndatePicker_SelectedDateChanged" Height="27" FontSize="16" VerticalContentAlignment="Center" Padding="3,0" TabIndex="10004" OpacityMask="{x:Null}"/>
    				<Button IsEnabled="False"  Content="{DynamicResource SearchText}" Margin="0,54,20,0" x:Name="InquireButton" VerticalAlignment="Top" Style="{StaticResource DialogButton}" HorizontalAlignment="Right" Click="InquireButton_Click" TabIndex="10008" />
    				<RadioButton Content="{DynamicResource AllDateText}" Style="{StaticResource RadioButtonStyle1}" HorizontalAlignment="Right" Margin="0,60,358,0" x:Name="TimeRadioButton1" VerticalAlignment="Top" FontSize="16" GroupName="TimeSelecet" Click="TimeRadioButton1_Click" TabIndex="10005" />
    				<RadioButton Content="{DynamicResource In7DayText}" Style="{StaticResource RadioButtonStyle1}" FontSize="16" HorizontalAlignment="Right" Margin="0,60,240,0" x:Name="TimeRadioButton2" VerticalAlignment="Top"  GroupName="TimeSelecet"  Click="TimeRadioButton1_Click" TabIndex="10006" />
    				<RadioButton Content="{DynamicResource In3DaysText}" Style="{StaticResource RadioButtonStyle1}" FontSize="16" Margin="0,60,138,0" x:Name="TimeRadioButton3" VerticalAlignment="Top" GroupName="TimeSelecet"  IsChecked="True" Click="TimeRadioButton1_Click" HorizontalAlignment="Right" TabIndex="10007" />




    			</Grid>
    			<Grid  Height="70">
    				<Grid.ColumnDefinitions>
    					<ColumnDefinition Width="280"/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    				</Grid.ColumnDefinitions>
    				<ToggleButton x:Name="BtnSun" Grid.Column="7"  Style="{DynamicResource ToggleButtonStyle}" Tag="周日" Click="BtnDay_OnClick">
    					<Label x:Name="lable6" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"/>
    				</ToggleButton>
    				<ToggleButton x:Name="BtnMon" Grid.Column="1"  Style="{DynamicResource ToggleButtonStyle}" Tag="周一" Click="BtnDay_OnClick">
    					<Label x:Name="lable0" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"/>
    				</ToggleButton>
    				<ToggleButton x:Name="BtnTue" Grid.Column="2"  Style="{DynamicResource ToggleButtonStyle}" Tag="周二" Click="BtnDay_OnClick">

    					<Label x:Name="lable1" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"/>
    				</ToggleButton>
    				<ToggleButton x:Name="BtnWed" Grid.Column="3"  Style="{DynamicResource ToggleButtonStyle}" Tag="周三" Click="BtnDay_OnClick">
    					<Label x:Name="lable2" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"/>
    				</ToggleButton>
    				<ToggleButton x:Name="BtnThe" Grid.Column="4"  Style="{DynamicResource ToggleButtonStyle}" Tag="周四" Click="BtnDay_OnClick">
    					<Label x:Name="lable3" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"/>
    				</ToggleButton>
    				<ToggleButton x:Name="BtnFri" Grid.Column="5"  Style="{DynamicResource ToggleButtonStyle}" Tag="周五" Click="BtnDay_OnClick">
    					<Label x:Name="lable4" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"/>
    				</ToggleButton>
    				<ToggleButton x:Name="BtnSta" Grid.Column="6"  Style="{DynamicResource ToggleButtonStyle}" Tag="周六" Click="BtnDay_OnClick">
    					<Label x:Name="lable5" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"/>
    				</ToggleButton>
    			</Grid>
    			<Grid  Height="50">
    				<Grid.ColumnDefinitions>
    					<ColumnDefinition Width="280"/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    				</Grid.ColumnDefinitions>
    				<ToggleButton  Grid.Column="1" IsChecked="True"  Style="{DynamicResource ToggleButtonStyle}" Tag="AM" Click="BtnAmPmE_OnClick"/>
    				<ToggleButton  Grid.Column="2"  Style="{DynamicResource ToggleButtonStyle}" Tag="PM" Click="BtnAmPmE_OnClick"/>
    				<ToggleButton  Grid.Column="3"  Style="{DynamicResource ToggleButtonStyle}" Tag="E" Click="BtnAmPmE_OnClick"/>
    				<!--<Label Content="未排患者" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="#FF772689" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="26,8,172,8"/>
                <Button Content="自动分配" Style="{StaticResource DialogButton}" Margin="149,11,31,11" Click="AutoClick"/>-->
    			</Grid>

    			<Grid  Height="50">
    				<Grid.ColumnDefinitions>
    					<ColumnDefinition Width="280"/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    					<ColumnDefinition/>
    				</Grid.ColumnDefinitions>
    				<Label Content="未排患者" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="#FF772689" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="26,8,172,8"/>
    				<Button Content="自动分配" Style="{StaticResource DialogButton}" Margin="149,11,31,11" />
    			</Grid>
    			<StackPanel Height="750" Orientation="Horizontal"/>
    			<ListView  ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Center" ItemsSource="{Binding}" x:Name="PatientlistView" ButtonBase.Click="GridViewColumnHeader_Click" SelectionChanged="PatientlistView_SelectionChanged" SelectedIndex="-1" ItemContainerStyle="{DynamicResource ListBoxItemStyle2}"  IsSynchronizedWithCurrentItem="True" Visibility="Visible" TabIndex="10009" Style="{StaticResource ListViewStyle}"
    				dragDropListBox:DragDropHelper.IsDragSource="true" dragDropListBox:DragDropHelper.IsDropTarget="true" dragDropListBox:DragDropHelper.DragDropTemplate="{StaticResource planetTemplateDrag}" Margin="0,0,1028,0"
                           Height="523.5"
                           >
    				<ListView.View>
    					<GridView ColumnHeaderContainerStyle="{StaticResource ListViewHeadStyleColumn}">
                            <!--<GridViewColumn Width="0" CellTemplate="{StaticResource Id}">
                                <Grid Tag="0">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{DynamicResource IDtext}" />
                                        <Image Source="Resources/ArrowDown.png" Name="ArrowID" Visibility="Hidden" />
                                    </StackPanel>
                                </Grid>
                            </GridViewColumn>-->
    						<GridViewColumn Width="65" CellTemplate="{StaticResource Name}">
    							<Grid Tag="2">
    								<StackPanel Orientation="Horizontal">
    									<TextBlock Text="{DynamicResource PatientIDtext}" />
    									<Image Source="Resources/ArrowDown.png" x:Name="ArrowName" Visibility="Hidden" />
    								</StackPanel>
    							</Grid>

    						</GridViewColumn>
    						<GridViewColumn Width="120" CellTemplate="{StaticResource PatientId}">
    							<Grid Tag="1">
    								<StackPanel Orientation="Horizontal">

    									<TextBlock Text="{DynamicResource Nametext}" />
    									<Image Source="Resources/ArrowDown.png" x:Name="ArrowPatientID" Visibility="Hidden" />
    								</StackPanel>
    							</Grid>
    						</GridViewColumn>
    						<GridViewColumn Width="70" CellTemplate="{StaticResource PatientId}">
    							<Grid Tag="1">
    								<StackPanel Orientation="Horizontal">

    									<TextBlock Text="{DynamicResource InfectionType}" />
    									<Image Source="Resources/ArrowDown.png" x:Name="ArrowPatientI" Visibility="Hidden" />
    								</StackPanel>
    							</Grid>
    						</GridViewColumn>

    					</GridView>
    				</ListView.View>
    			</ListView>
    		</StackPanel>
    	</Viewbox>
    	<Border BorderBrush="#FFA09E9E" BorderThickness="3,0,0,0">
    		<Grid>
    			<Grid.RowDefinitions>
    				<RowDefinition Height="150"/>
    				<RowDefinition/>
    			</Grid.RowDefinitions>
    			<Grid.ColumnDefinitions>
    				<ColumnDefinition Width="280"/>
    				<ColumnDefinition/>
    			</Grid.ColumnDefinitions>
    			<Border BorderBrush="#FFA09E9E" BorderThickness="3,0,0,3" Grid.Column="1">
    				<Grid>
    					<Grid.RowDefinitions>
    						<RowDefinition/>
    						<RowDefinition/>
    					</Grid.RowDefinitions>
    					<Grid x:Name="GridDay">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    						</Grid.ColumnDefinitions>
    						<ToggleButton x:Name="btn0" Content="ToggleButton" Template="{DynamicResource ToggleButtonControlTemplate1}" Tag="周一" Click="BtnDay_OnClick"/>
    						<ToggleButton x:Name="btn1" Content="ToggleButton" Template="{DynamicResource ToggleButtonControlTemplate1}" Tag="周二" Click="BtnDay_OnClick" Grid.Column="1"/>
    						<ToggleButton x:Name="btn2" Content="ToggleButton" Template="{DynamicResource ToggleButtonControlTemplate1}" Tag="周三" Click="BtnDay_OnClick" Grid.Column="2"/>
    						<ToggleButton x:Name="btn3" Content="ToggleButton" Template="{DynamicResource ToggleButtonControlTemplate1}" Tag="周四" Click="BtnDay_OnClick" Grid.Column="3"/>
    						<ToggleButton x:Name="btn4" Content="ToggleButton" Template="{DynamicResource ToggleButtonControlTemplate1}" Tag="周五" Click="BtnDay_OnClick" Grid.Column="4"/>
    						<ToggleButton x:Name="btn5" Content="ToggleButton" Template="{DynamicResource ToggleButtonControlTemplate1}" Tag="周六" Click="BtnDay_OnClick" Grid.Column="5"/>
    						<ToggleButton x:Name="btn6" Content="ToggleButton" Template="{DynamicResource ToggleButtonControlTemplate1}" Tag="周日" Click="BtnDay_OnClick" Grid.Column="6"/>
    					</Grid>
                        <Grid Grid.Row="1" x:Name="AmPmEGrid" >
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    						</Grid.ColumnDefinitions>
    						<ToggleButton Content="AM" Template="{DynamicResource ToggleButtonControlTemplate2}" Tag="AM" Click="BtnAmPmE_OnClick" IsChecked="True"/>
    						<ToggleButton Content="PM" Template="{DynamicResource ToggleButtonControlTemplate2}" Tag="PM" Click="BtnAmPmE_OnClick" Grid.Column="1"/>
    						<ToggleButton Content="E" Template="{DynamicResource ToggleButtonControlTemplate2}" Tag="E" Click="BtnAmPmE_OnClick" Grid.Column="2"/>
    					</Grid>
    				</Grid>
    			</Border>
    			<Grid Grid.Column="1" Grid.Row="1">
    				<Grid.RowDefinitions>
    					<RowDefinition Height="100"/>
    					<RowDefinition/>
    				</Grid.RowDefinitions>
    				<Border BorderBrush="#FFA09E9E" BorderThickness="3,0,0,0" Height="100">
    					<Grid x:Name="InfectGrid">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    							<ColumnDefinition/>
    						</Grid.ColumnDefinitions>
    						<ToggleButton Content="ToggleButton" VerticalAlignment="Top" Height="38" Template="{DynamicResource ToggleButtonControlTemplate3}"/>
    					</Grid>
    				</Border>
    				<Border BorderBrush="#FFA09E9E" BorderThickness="3,0,0,0" Grid.Row="1">
    					<Grid>
    						<ListBox AllowDrop="True" x:Name="BedListBox" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Center" BorderThickness="0"
                             >
    							<ListBox.ItemsPanel>
    								<ItemsPanelTemplate>
    									<WrapPanel/>
    								</ItemsPanelTemplate>
    							</ListBox.ItemsPanel>
    						</ListBox>
    					</Grid>
    				</Border>
    			</Grid>
    			<Grid Grid.Row="1">
    				<Grid.RowDefinitions>
    					<RowDefinition Height="100"/>
    					<RowDefinition/>
    				</Grid.RowDefinitions>
    				<Grid Grid.Row="1">
    					<ListBox x:Name="PatientListBox1" ItemContainerStyle="{DynamicResource PatientListBoxItemStyle}" dragDropListBox:DragDropHelper.IsDragSource="true" dragDropListBox:DragDropHelper.IsDropTarget="true" dragDropListBox:DragDropHelper.DragDropTemplate="{StaticResource planetTemplateDrag}" ItemsSource="{Binding}" BorderThickness="0"/>
    				</Grid>
    				<Grid>
    					<Grid>
    						<Grid.RowDefinitions>
    							<RowDefinition/>
    							<RowDefinition/>
    						</Grid.RowDefinitions>
    						<Grid>
    							<Button Content="自动分床" Template="{DynamicResource ButtonControlTemplate1}" Click="AutoClick"/>
    						</Grid>
    						<Grid Grid.Row="1">
    							<Grid.ColumnDefinitions>
    								<ColumnDefinition Width="2*"/>
    								<ColumnDefinition/>
    							</Grid.ColumnDefinitions>
    							<Button x:Name="BtnSortByName" Content="姓名" Template="{DynamicResource ButtonControlTemplate2}" Click="BtnSortByName_Click" Uid="0"/>
    							<Button x:Name="BtnSortByInfection" Content="感染" Grid.Column="1" Template="{DynamicResource ButtonControlTemplate2}" Uid="1"/>
    						</Grid>
    					</Grid>
    				</Grid>
    			</Grid>
    			<Grid>
    				<Border BorderBrush="#FFA09E9E" BorderThickness="0,0,0,3">
    					<Grid>
    						<Grid.RowDefinitions>
    							<RowDefinition/>
    							<RowDefinition Height="50"/>
    						</Grid.RowDefinitions>
    						<Grid Grid.Row="1">
    							<Grid.ColumnDefinitions>
    								<ColumnDefinition/>
    								<ColumnDefinition/>
    							</Grid.ColumnDefinitions>
    							<Button Content="本周" Template="{DynamicResource ButtonControlTemplate1}"/>
    							<Button x:Name="BtnNextWeek" Content="下周" Grid.Column="1" Template="{DynamicResource ButtonControlTemplate1}"/>
    						</Grid>
    						<Grid>
    							<StackPanel x:Name="TreatmentPanel"   />
    						</Grid>
    					</Grid>
    				</Border>
    			</Grid>
    		</Grid>
    	</Border>
    </Grid>
</UserControl>
