<Application x:Class="WpfApplication1.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:Order="clr-namespace:WpfApplication1">
    <Application.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <!-- <ResourceDictionary /> -->
            </ResourceDictionary.MergedDictionaries>
            
            <Style x:Key="BorderStyle1" TargetType="Border">
                <Setter Property="BorderBrush" Value="#FF080D00" />
                <Setter Property="Padding" Value="0,0,0,5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Margin" Value="2,1,4,1" />
                <Setter Property="Background" Value="{DynamicResource BacGround2}" />

            </Style>
            <sys:Double x:Key="TextBlockStyle1Fontsize">30</sys:Double>

            <Style x:Key="TextBlockStyle1" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="4,6,0,0" />
                <Setter Property="FontSize" Value="{DynamicResource  TextBlockStyle1FontsizeFontSize}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
            </Style>
            <Style x:Key="TextBlockStyle2" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="6,0,0,2" />
                <Setter Property="Width" Value="74" />
                <Setter Property="FontSize" Value="{DynamicResource  TextBlockStyle2FontSize}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
            </Style>

            <Style x:Key="TextBlockStyle3" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="0,0,0,2" />
                <Setter Property="FontSize" Value="{DynamicResource  TextBlockStyle3FontSize}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
            </Style>
            <Style x:Key="TextBlockStyle4" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="36,0,0,2" />
                <Setter Property="FontSize" Value="{DynamicResource  TextBlockStyle4FontSize}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
            </Style>
            <Style x:Key="TextBlockStyle5" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
            </Style>
            <Style x:Key="TextBlockStyle6" TargetType="TextBlock">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
            </Style>
            <Style x:Key="TextBoxStyle1" TargetType="TextBox">
                <!--  <Setter Property="HorizontalAlignment" Value="Right" />  -->
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="2,0,2,2" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{DynamicResource  TextBoxStyle1FontSize}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Padding" Value="3,0" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="Background" Value="{DynamicResource BacGround2}" />
            </Style>
            <Style x:Key="CheckBoxStyle1" TargetType="CheckBox">
                <Setter Property="Margin" Value="6,0,6,2" />
                <!--  <Setter Property="HorizontalContentAlignment" Value="Center" />  -->
                <Setter Property="FontSize" Value="{DynamicResource  CheckBoxStyle1FontSize}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Background" Value="{DynamicResource BacGround2}" />
            </Style>
            <Style x:Key="RadioButtonStyle1" TargetType="RadioButton">
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Background" Value="{DynamicResource BacGround2}" />
            </Style>
            <Style x:Key="ComboBoxStyle1" TargetType="ComboBox">
                <!--  <Setter Property="HorizontalAlignment" Value="Right" />  -->
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="2,0,2,2" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{DynamicResource  ComboBoxStyle1FontSize}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="IsEditable" Value="True" />
                <Setter Property="Padding" Value="3,1" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="Background" Value="{DynamicResource BacGround2}" />
            </Style>
            <Style x:Key="ComboBoxStyle2" TargetType="ComboBox">
                <!--  <Setter Property="HorizontalAlignment" Value="Right" />  -->
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="2,0,2,2" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{DynamicResource  ComboBoxStyle2FontSize}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Padding" Value="3,1" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="Background" Value="{DynamicResource BacGround2}" />
            </Style>
            <Style x:Key="ComboBoxStyle3" TargetType="ComboBox">
                <!--  <Setter Property="HorizontalAlignment" Value="Right" />  -->
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="2,0,2,2" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{DynamicResource  ComboBoxStyle2FontSize}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Padding" Value="3,1" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="Background" Value="{DynamicResource BacGround2}" />
            </Style>
            <Style x:Key="ButtonStyle1" TargetType="Button">
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="Background" Value="{DynamicResource LeftButtonBackground}" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
            </Style>
            <Style x:Key="ButtonStyle2" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource LeftButtonBackground2}" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor2}" />
            </Style>
            <Style x:Key="ButtonStyle3" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource LeftButtonBackground}" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor2}" />
            </Style>
            <Style x:Key="ButtonStyle22" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource LeftButtonBackground22}" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor22}" />
            </Style>
            <Style x:Key="ButtonStyle33" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource LeftButtonBackground33}" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor33}" />
            </Style>
            <Style x:Key="ButtonTextBlockStyle1" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource  ButtonTextBlockStyle1FontSize}" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
            </Style>

            <Style x:Key="ButtonTextBlockStyle22" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource  ButtonTextBlockStyle22FontSize}" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor2}" />
            </Style>

            <Style x:Key="ButtonTextBlockStyle33" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource  ButtonTextBlockStyle33FontSize}" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor3}" />
            </Style>

            <Style x:Key="ButtonTextBlockStyle1_selected" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource  ButtonTextBlockStyle1_selectedFontSize}" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
            </Style>
            <Style x:Key="stimulusInitial" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource TextColor2}" />
            </Style>


            <!--Style x:Key="ButtonTextBlockStyle2" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource  ButtonTextBlockStyle2FontSize}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
            </Style>-->
            <Style x:Key="ImageStyle1" TargetType="Image">
                <Setter Property="Height" Value="50" />
                <Setter Property="Width" Value="50" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Stretch" Value="Fill" />
            </Style>
            <Style x:Key="ImageStyle2" TargetType="Image">
                <Setter Property="Height" Value="16" />
                <Setter Property="Width" Value="16" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Stretch" Value="Fill" />
            </Style>
            <Style x:Key="SliderStyle1" TargetType="Slider">
                <Setter Property="Margin" Value="6,0,6,2" />
            </Style>


            <Order:BackgroundConverter x:Key="myConverter" />
            <Style x:Key="myItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="Background">
                    <Setter.Value>
                        <Binding Converter="{StaticResource myConverter}" RelativeSource="{RelativeSource Self}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Height" Value="20" />
                <Setter Property="FontSize" Value="{DynamicResource  myItemStyleFontSize}" />
                <Setter Property="BorderThickness" Value="0" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="LightBlue" />
                    </Trigger>
                </Style.Triggers>
                <Style.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue" />
                </Style.Resources>
            </Style>


            <Style x:Key="ListViewHeadStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Background" Value="#FFF1F1F1" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />

            </Style>


            <Style x:Key="ListViewHeadStyleColumn" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Background" Value="#FFF1F1F1" />
                <Setter Property="Height" Value="30" />
                <Setter Property="FontSize" Value="{DynamicResource  ListViewHeadStyleColumnFontSize}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
            </Style>


            <SolidColorBrush x:Key="RightButtonBackground" Color="#FF8E9CC5" />
            <SolidColorBrush x:Key="LeftButtonBackground" Color="#FF8E9CC5" />
            <SolidColorBrush x:Key="LeftButtonBackground22" Color="#FF5C85F9" />
            <SolidColorBrush x:Key="LeftButtonBackground33" Color="#FF1C85F9" />
            <SolidColorBrush x:Key="MiddleButtonBackground" Color="#FF5C85F9" />
            <SolidColorBrush x:Key="ButtonSelectedBackground" Color="#FF8E9CC5" />
            <SolidColorBrush x:Key="BacGround1" Color="White" />
            <SolidColorBrush x:Key="BacGround2" x:Shared="true" Color="White" />
            <SolidColorBrush x:Key="TextColor1" Color="Black" />
            <SolidColorBrush x:Key="TextColor2" Color="White" />
            <SolidColorBrush x:Key="TextColor22" Color="DarkGreen" />
            <SolidColorBrush x:Key="TextColor33" Color="Red" />

            <Style x:Key="RightButton1" TargetType="{x:Type Button}">
                <Setter Property="Height" Value="30" />
                <Setter Property="Background" Value="{DynamicResource RightButtonBackground}" />
                <Setter Property="FontSize" Value="{DynamicResource  RightButton1FontSize}" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="Width" Value="107" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <!--  <Setter Property="FontWeight" Value="Bold" />  -->
            </Style>

            <Style x:Key="BigButton" TargetType="{x:Type Button}">

                <Setter Property="Background" Value="{DynamicResource RightButtonBackground}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />

            </Style>
            <Style x:Key="BigButtonSelsecetd" TargetType="{x:Type Button}">

                <Setter Property="Background" Value="{DynamicResource ButtonSelectedBackground}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />

            </Style>

            <Style x:Key="RightTextBox1" TargetType="{x:Type TextBox}">
                <Setter Property="Height" Value="30" />
                <Setter Property="FontSize" Value="{DynamicResource  RightTextBox1FontSize}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
            </Style>


            <Style x:Key="RightTextBlock1" TargetType="{x:Type TextBlock}">
                <!--<Setter Property="Height" Value="30" />-->
                <Setter Property="FontSize" Value="{DynamicResource  RightTextBlock1FontSize}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <!--  <Setter Property="FontWeight" Value="Bold" />  -->
                <Setter Property="Padding" Value="0,2" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />

            </Style>


            <Style x:Key="BigTextblock_StimusProgress" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
            </Style>


            <Style x:Key="DialogButton" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="100" />
                <Setter Property="Height" Value="28" />
                <Setter Property="FontSize" Value="{DynamicResource  DialogButtonFontSize}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Background" Value="{DynamicResource RightButtonBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
            </Style>

            <Style x:Key="DialogTextBlock" TargetType="{x:Type TextBlock}">
                <!--  <Setter Property="Height" Value="20"/>  -->
                <Setter Property="FontSize" Value="{DynamicResource  DialogTextBlockFontSize}" />
                <Setter Property="Padding" Value="0,2" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />

            </Style>
            <Style x:Key="DialogLabel" TargetType="{x:Type Label}">
                <!--  <Setter Property="Height" Value="28"/>  -->
                <Setter Property="FontSize" Value="{DynamicResource  DialogLabelFontSize}" />
                <Setter Property="Padding" Value="0,2" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
            </Style>

            <Style x:Key="RightLabel" TargetType="{x:Type Label}">
                <Setter Property="Height" Value="30" />
                <Setter Property="FontSize" Value="{DynamicResource  RightLabelFontSize}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Padding" Value="0,2" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />

            </Style>
            <Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Background" Value="{DynamicResource BacGround2}" />
            </Style>
            <Style x:Key="DialogTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="Height" Value="27" />
                <Setter Property="FontSize" Value="{DynamicResource  DialogTextBoxFontSize}" />
                <Setter Property="Padding" Value="3,1" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="Background" Value="{DynamicResource BacGround2}" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
            </Style>

            <Style x:Key="DatePickerStyle" TargetType="{x:Type DatePicker}">
                <Setter Property="Foreground" Value="{DynamicResource TextColor1}" />
                <Setter Property="Background" Value="{DynamicResource BacGround2}" />
            </Style>


            <Style x:Key="LeftButtonGrid" TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="{DynamicResource LeftButtonBackground}" />
            </Style>

            <Style x:Key="LeftButtonGrid22" TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="{DynamicResource LeftButtonBackground22}" />
            </Style>

            <Style x:Key="LeftButtonGrid33" TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="{DynamicResource LeftButtonBackground33}" />
            </Style>

            <Style x:Key="GridBackGround1" TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="{DynamicResource BacGround1}" />
            </Style>

            <Style x:Key="DialogGridBottomBacGround" TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="{DynamicResource LeftButtonBackground}" />
            </Style>
            <Style x:Key="GridBackGround2" TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="{DynamicResource BacGround2}" />
            </Style>


            <SolidColorBrush x:Key="ButtonBackgroundColor1" Color="#FF808080" />
            <SolidColorBrush x:Key="ButtonBorderColor1" Color="#FF8D8686" />

            <Style x:Key="ButtonNormalStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Height="Auto" Margin="0,0,1.535,-0.919">
                        		<Rectangle Fill="#FFD8D8DE" HorizontalAlignment="Stretch" Height="Auto" Stroke="#FF918E8E" VerticalAlignment="Stretch" Width="Auto" RadiusY="13.5" RadiusX="9" StrokeThickness="2"/>
                        		<Label Content="{TemplateBinding Content}" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                        	</Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="100"/>
            </Style>

            <Style x:Key="MenuStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="2,0,0,0"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Margin="0,0,2,0">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected"/>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF77C56A"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF519342"/>
                                                </ColorAnimationUsingKeyFrames>
                                                
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="SelectedUnfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <Grid x:Name="grid">
                                        <Rectangle x:Name="rectangle" Fill="#FFBBB7B7" HorizontalAlignment="Stretch" Height="Auto" Stroke="#FF959090" VerticalAlignment="Stretch" RadiusY="15.5" RadiusX="15.5" StrokeThickness="4"/>
                                        <Label x:Name="label" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center"/>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MenuStyle2" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="2,0,0,0"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Margin="0,0,2,0">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected"/>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF77C56A"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF519342"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="SelectedUnfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <Grid x:Name="grid">
                                        <Rectangle x:Name="rectangle" Fill="White" HorizontalAlignment="Stretch" Height="Auto" Stroke="#FF959090" VerticalAlignment="Stretch" RadiusY="15.5" RadiusX="15.5" StrokeThickness="4"/>
                                        <Label  x:Name="label" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center"/>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="FunctionButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Pressed"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="rectangle">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <SolidColorBrush Color="#FFECE8E8"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border BorderBrush="{x:Null}" BorderThickness="1" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                                    <Grid>
                                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" Height="Auto" RadiusY="0" RadiusX="0" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="Auto">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                                    <GradientStop Color="White"/>
                                                    <!--<GradientStop Color="MediumBlue" Offset="0.448"/>-->
                                                    <GradientStop Color="MediumBlue" Offset="0.7"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Label Foreground="White" Content="{TemplateBinding Content}"  VerticalAlignment="Stretch"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14.667"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FunctionLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Label">
                            <Grid>
                                <Border BorderBrush="{x:Null}" BorderThickness="1" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                                    <Grid>
                                        <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" Height="Auto" RadiusY="0" RadiusX="0" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="Auto">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                                    <GradientStop Color="LightGray"/>
                                                    <!--<GradientStop Color="MediumBlue" Offset="0.448"/>-->
                                                    <GradientStop Color="Gray" Offset="0.9"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Label Foreground="Black" Content="{TemplateBinding Content}"  VerticalAlignment="Stretch"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14.667"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>

    </Application.Resources>
</Application>
